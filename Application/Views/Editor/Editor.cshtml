@using Efeu.Runtime.Model
@model WorkflowDefinition;
<script type="text/hyperscript">
    on mouseup from window
        if window.dragging is not null
            remove .dragging from window.dragging
            set window.dragging to null
        end
    end

    behavior  efeuEditorActionNode
    on mousedown
        set window.dragging to me
        set window.offsetX to event.clientX - me._left or 0
        set window.offsetY to event.clientY - me._top or 0
    end

    on mousemove from window
        if window.dragging is me
            set x to event.clientX - window.offsetX
            set y to event.clientY - window.offsetY
            set gridSize to parseInt(getComputedStyle(document.documentElement).fontSize) * 2
            set me._left to Math.round(x / gridSize) * gridSize
            set me._top to Math.round(y / gridSize) * gridSize
            set me.style.left to `${me._left}px`
            set me.style.top to `${me._top}px`
        end
    end
    end

    behavior efeuEditorActionNodeInput
    on mouseup
        if window.dragging.matches('[out]')
            send trigger to me
        end
    end
    end

    behavior efeuEditorActionNodeOutput
    on mousedown
        set window.dragging to me
        add .dragging
        halt
    end
    end
</script>
<div style="display: flex; flex-direction: column; height: 100%">
    <div>@Model.Name</div>
    <div class="editor">
        <div class="canvas">
            @foreach (WorkflowActionNode node in Model.Actions)
            {
                <partial name="ActionNode" model="@node" />
            }
        </div>
    </div>
</div>

@{

}

